library(dplyr)
library(tidyr)
library(dismo)
options(java.parameters = "-Xmx20g" )
jar <- paste(system.file(package="dismo"), "/java/maxent.jar", sep='')
library(ENMeval) #v2.0.0


setwd("C:/cs/mid-pleistocene_niches/work/maxent")
set.seed(31)

#### Evaluate combinations of FCs and RMs ----
# load data and set type, where 0=background, 1=sample, as indicated in dismo::maxent
sample <- readRDS('../sample/sample_points.RDS')@data %>% 
  as.data.frame() %>% 
  drop_na(bio1:npp) %>% 
  mutate(type=1)
environment <- readRDS('../correlation/table.RDS') %>% 
  mutate(type=0)

# Select predictors
occurrence <- sample %>% dplyr::select(c(x,y,bio1,bio2,bio7,bio12,bio15,elev))
background <- environment %>% sample_n(10000) %>% dplyr::select(c(x,y,bio1,bio2,bio7,bio12,bio15,elev))

user.grp <- list(occs.grp = sample %>% pull(code), # Make sure that NO number is missing
                 bg.grp = rep(unique(sample$code), length.out=nrow(background)))

# Evaluate models
maxent_eval <- ENMevaluate(occs=occurrence,
                           bg=background,
                           algorithm='maxent.jar',
                           partitions='user',
                           user.grp=user.grp,
                           tune.args = list(
                             fc=c('L','LQ','LQH', 'LQP', 'LQHP', 'LQHPT'),
                             rm=c(0.2,0.4,0.6,0.8,1,1.5,2,3,4)),
                           parallel=T)


View(maxent_eval@results)
#saveRDS(maxent_eval, 'maxent_eval.RDS')
#maxent_eval <- readRDS('maxent_eval.RDS')

# Select best results (choose from @results)
maxent_eval_select <- maxent_eval@models$fc.LQP_rm.0.4
saveRDS(maxent_eval@models$fc.LQP_rm.0.4, 'maxent_eval_select.RDS')

# Plot results
library(ggplot2)
library(RColorBrewer)

evaldata <- maxent_eval@results %>% pivot_longer(-c(fc:tune.args), names_to='criterion', values_to='val') %>%
  filter(criterion %in% c('delta.AICc','or.10p.avg','auc.val.avg')) %>% 
  mutate(fc=factor(fc, levels=c('L','LQ','LQH', 'LQP', 'LQHP', 'LQHPT')),
         rm=as.numeric(as.character(rm)),
         criterion=factor(criterion, levels=c('delta.AICc','or.10p.avg','auc.val.avg'), labels=c('Delta AICc','OR .10','AUC test')))

evalplot <- ggplot(data=evaldata, aes(x=rm, y=val, group=fc, color=fc))+
  geom_vline(xintercept=1, linetype='dashed')+
  geom_point()+
  geom_line()+
  facet_wrap(~criterion,
             scales='free_y',
             strip.position ='top')+
  labs(x='Regularization multiplier', y='', color='Feature class')+
  scale_x_continuous(limits=c(0,4))+
  scale_color_brewer(palette = "Dark2")+
  theme_bw()+
  theme(
    strip.text = element_text(size = rel(1)),
    strip.background = element_rect(fill = NA, colour = 'black', size = 0.4)
  )

plot(evalplot)

tiff("model_evaluation.tiff", units="cm", width=19, height=6, res=600)
evalplot
dev.off()

# Plot feature importance
tiff("feature_importance.tiff", units="cm", width=8.5, height=6, res=600)
plot(maxent_eval@models$fc.LQP_rm.0.4)
dev.off()

# Plot response curves
tiff("response_curves.tiff", units="cm", width=15, height=15, res=600)
response(maxent_eval@models$fc.LQP_rm.0.4)
dev.off()

# AIC: https://www.scribbr.com/statistics/akaike-information-criterion/
# https://cran.r-project.org/web/packages/ENMeval/ENMeval.pdf
# https://rsh249.github.io/bioinformatics/ENMeval.html