return(clipped)
}
clipzip(zipdir, filename, studyarea, targetdir)
# Function to open zip files, extract filp, clip AOI and save to drive
clipzip <- function(zipfile, filename, studyarea, targetdir, refsystem='+init=epsg:4326'){
file <- unzip(zipfile, files=filename, exdir=targetdir)
rfile <- raster(file)
crs(rfile) <- '+init=epsg:4326'
clipped <- crop(rfile, studyarea)
if(refsystem != '+init=epsg:4326'){
clipped <- spTransform(clipped, '+init=epsg:4326')
}
targetfile <- paste(targetdir,filename, sep='/')
writeRaster(clipped, filename=targetfile, format="GTiff", overwrite=TRUE)
file.remove(paste(targetdir, filename, sep='/'))
return(clipped)
}
if (1 != 2){}
if (1 != 2){print('yes')}
if (1 = 2){print('yes')}
if (1 == 2){print('yes')}
# Function to open zip files, extract filp, clip AOI and save to drive
clipzip <- function(zipfile, filename, studyarea, targetdir, refsystem='+init=epsg:4326'){
file <- unzip(zipfile, files=filename, exdir=targetdir)
rfile <- raster(file)
crs(rfile) <- '+init=epsg:4326'
clipped <- crop(rfile, studyarea)
if(refsystem != '+init=epsg:4326'){
clipped <- spTransform(clipped, '+init=epsg:4326')
}
targetfile <- paste(targetdir,filename, sep='/')
writeRaster(clipped, filename=targetfile, format="GTiff", overwrite=TRUE)
file.remove(paste(targetdir, filename, sep='/'))
return(clipped)
}
clipzip(zipdir, filename, studyarea, targetdir)
clipzip(zipdir, filename, studyarea, targetdir, refsystem='+init=epsg:3035' )
library(rgdal)
# Function to open zip files, extract filp, clip AOI and save to drive
clipzip <- function(zipfile, filename, studyarea, targetdir, refsystem='+init=epsg:4326'){
file <- unzip(zipfile, files=filename, exdir=targetdir)
rfile <- raster(file)
crs(rfile) <- '+init=epsg:4326'
clipped <- crop(rfile, studyarea)
if(refsystem != '+init=epsg:4326'){
clipped <- spTransform(clipped, refsystem)}
targetfile <- paste(targetdir,filename, sep='/')
writeRaster(clipped, filename=targetfile, format="GTiff", overwrite=TRUE)
file.remove(paste(targetdir, filename, sep='/'))
return(clipped)
}
clipzip(zipdir, filename, studyarea, targetdir, refsystem='+init=epsg:3035' )
# Function to open zip files, extract filp, clip AOI and save to drive
clipzip <- function(zipfile, filename, studyarea, targetdir, refsystem='+init=epsg:4326'){
file <- unzip(zipfile, files=filename, exdir=targetdir)
rfile <- raster(file)
crs(rfile) <- '+init=epsg:4326'
clipped <- crop(rfile, studyarea)
if(refsystem != '+init=epsg:4326'){
clipped <- projectRaster(clipped, refsystem)}
targetfile <- paste(targetdir,filename, sep='/')
writeRaster(clipped, filename=targetfile, format="GTiff", overwrite=TRUE)
file.remove(paste(targetdir, filename, sep='/'))
return(clipped)
}
clipzip(zipdir, filename, studyarea, targetdir, refsystem='+init=epsg:3035' )
# Function to open zip files, extract filp, clip AOI and save to drive
clipzip <- function(zipfile, filename, studyarea, targetdir){
file <- unzip(zipfile, files=filename, exdir=targetdir)
rfile <- raster(file)
crs(rfile) <- '+init=epsg:4326'
clipped <- crop(rfile, studyarea)
targetfile <- paste(targetdir,filename, sep='/')
writeRaster(clipped, filename=targetfile, format="GTiff", overwrite=TRUE)
file.remove(paste(targetdir, filename, sep='/'))
return(clipped)
}
# Export Just a single file
zipfile <- 'Bio1_Pleistocene.zip'
zipdir <- paste(path, zipfile, sep='/')
filename <- 'bio1_t2.asc'
clipzip(zipdir, filename, studyarea, targetdir, refsystem='+init=epsg:3035' )
# Function to open zip files, extract filp, clip AOI and save to drive
clipzip <- function(zipfile, filename, studyarea, targetdir){
file <- unzip(zipfile, files=filename, exdir=targetdir)
rfile <- raster(file)
crs(rfile) <- '+init=epsg:4326'
clipped <- crop(rfile, studyarea)
targetfile <- paste(targetdir,filename, sep='/')
writeRaster(clipped, filename=targetfile, format="GTiff", overwrite=TRUE)
file.remove(paste(targetdir, filename, sep='/'))
return(clipped)
}
clipzip(zipdir, filename, studyarea, targetdir, refsystem='+init=epsg:3035' )
# Function to open zip files, extract filp, clip AOI and save to drive
clipzip <- function(zipfile, filename, studyarea, targetdir){
file <- unzip(zipfile, files=filename, exdir=targetdir)
rfile <- raster(file)
crs(rfile) <- '+init=epsg:4326'
clipped <- crop(rfile, studyarea)
targetfile <- paste(targetdir,filename, sep='/')
writeRaster(clipped, filename=targetfile, format="GTiff", overwrite=TRUE)
file.remove(paste(targetdir, filename, sep='/'))
return(clipped)
}
clipzip(zipdir, filename, studyarea, targetdir)
# Export a list
ziplist <- list.files(path, pattern= '*Pleistocene.zip', full.names = TRUE)
timelist <- seq(37,56,1)
for(zip in ziplist){
print(zip)
zipped <- unzip(zip, list=TRUE)$Name
for(timeslice in timelist){
filename <- zipped[grep(paste('*t',timeslice,'.asc', sep=''), zipped)]
print(filename)
clipzip(zip,
filename=filename,
studyarea=studyarea,
targetdir=targetdir)
}
}
# Aggregate to specified time-slices
setwd('C:/cs/mid-pleistocene_niches/work/oscillayer')
for(prefix in paste('bio', seq(1,19,1), sep='')){
print(prefix)
brick(list(paste(prefix, '_t37.tif', sep=''), paste(prefix, '_t38.tif', sep=''))) %>% mean() %>% writeRaster(filename=paste(prefix,'_MIS11ab',sep=''), format="GTiff", overwrite=TRUE)
brick(list(paste(prefix, '_t39.tif', sep=''), paste(prefix, '_t40.tif', sep=''),paste(prefix, '_t41.tif', sep=''))) %>% mean() %>% writeRaster(filename=paste(prefix,'_MIS11c',sep=''), format="GTiff", overwrite=TRUE)
brick(list(paste(prefix, '_t42.tif', sep=''))) %>% mean() %>% writeRaster(filename=paste(prefix,'_MIS11de',sep=''), format="GTiff", overwrite=TRUE)
brick(list(paste(prefix, '_t43.tif', sep=''))) %>% mean() %>% writeRaster(filename=paste(prefix,'_MIS12a',sep=''), format="GTiff", overwrite=TRUE)
brick(list(paste(prefix, '_t44.tif', sep=''), paste(prefix, '_t45.tif', sep=''))) %>% mean() %>% writeRaster(filename=paste(prefix,'_MIS12b',sep=''), format="GTiff", overwrite=TRUE)
brick(list(paste(prefix, '_t46.tif', sep=''), paste(prefix, '_t47.tif', sep=''))) %>% mean() %>% writeRaster(filename=paste(prefix,'_MIS12c',sep=''), format="GTiff", overwrite=TRUE)
brick(list(paste(prefix, '_t38.tif', sep=''), paste(prefix, '_t49.tif', sep=''),paste(prefix, '_t50.tif', sep=''))) %>% mean() %>% writeRaster(filename=paste(prefix,'_MIS13a',sep=''), format="GTiff", overwrite=TRUE)
brick(list(paste(prefix, '_t51.tif', sep=''))) %>% mean() %>% writeRaster(filename=paste(prefix,'_MIS13b',sep=''), format="GTiff", overwrite=TRUE)
brick(list(paste(prefix, '_t52.tif', sep=''), paste(prefix, '_t53.tif', sep=''))) %>% mean() %>% writeRaster(filename=paste(prefix,'_MIS13c',sep=''), format="GTiff", overwrite=TRUE)
brick(list(paste(prefix, '_t54.tif', sep=''), paste(prefix, '_t55.tif', sep=''))) %>% mean() %>% writeRaster(filename=paste(prefix,'_MIS14ac',sep=''), format="GTiff", overwrite=TRUE)
brick(list(paste(prefix, '_t56.tif', sep=''))) %>% mean() %>% writeRaster(filename=paste(prefix,'_MIS14d',sep=''), format="GTiff", overwrite=TRUE)
}
path <- 'C:/cs/geodata/GEBCO/unzipped_GEBCO_2020_bathymetry'
studyarea <- shapefile('study_area.shp')
# Variables
setwd('C:/cs/mid-pleistocene_niches/work')
path <- 'C:/cs/geodata/GEBCO/unzipped_GEBCO_2020_bathymetry'
studyarea <- shapefile('study_area.shp')
library(raster)
library(dplyr)
# Variables
setwd('C:/cs/mid-pleistocene_niches/work')
path <- 'C:/cs/geodata/GEBCO/unzipped_GEBCO_2020_bathymetry'
studyarea <- shapefile('study_area.shp')
gebco <- raster('C:/cs/geodata/GEBCO/unzipped_GEBCO_2020_bathymetry/gebco_global.tif')
Summary(gebco)
gebco <- raster('C:/cs/geodata/GEBCO/unzipped_GEBCO_2020_bathymetry/gebco_global.tif') %>%
crop(gebco, studyarea)
gebco <- raster('C:/cs/geodata/GEBCO/unzipped_GEBCO_2020_bathymetry/gebco_global.tif')
gebco <- raster('C:/cs/geodata/GEBCO/unzipped_GEBCO_2020_bathymetry/gebco_global.tif') %>%
crop(studyarea)
plot(gebco)
library(readr)
sealevel <- read_delim("https://www.ncei.noaa.gov/pub/data/paleo/contributions_by_author/spratt2016/spratt2016.txt",
"\t", escape_double = FALSE, col_types = cols(X10 = col_skip()),
trim_ws = TRUE, skip = 95)
View(sealevel)
View(gebco)
View(sealevel)
library(readxl)
tstab <- read_excel("timeslices.xlsx")
View(tstab)
View(tstab)
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS)
View(tstab)
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct()
View(tstab)
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, keep.all=T)
View(tstab)
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T)
View(tstab)
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-Oscillayer)
View(tstab)
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T)
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T, -Oscillayer)
View(tstab)
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-Oscillayer)
View(tstab)
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-c(Oscillayer,Age))
## Sea level means
tstab <- tstab %>% mutate(sealevel=mean(sealevel$SeaLev_longPC1))
View(tstab)
View(sealevel)
## Sea level means
tstab <- tstab %>% mutate(sealevel=mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>Age_min]))
## Sea level means
tstab <- tstab %>% mutate(sealevel=mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>5]))
## Sea level means
tstab <- tstab %>% mutate(sealevel=mean(sealevel$SeaLev_longPC1))
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-c(Oscillayer,Age))
## Sea level means
tstab <- tstab %>% mutate(sealevel=mean(sealevel$SeaLev_longPC1))
## Sea level means
tstab <- tstab %>% mutate(sealevel=mean(sealevel$SeaLev_longPC1[sealevel$SeaLev_longPC1]))
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-c(Oscillayer,Age))
## Sea level means
tstab <- tstab %>% mutate(slvl=mean(sealevel$SeaLev_longPC1[sealevel$SeaLev_longPC1]))
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-c(Oscillayer,Age))
## Sea level means
tstab <- tstab %>% mutate(slvl=mean(sealevel$SeaLev_longPC1[sealevel$SeaLev_longPC1>0]))
## Sea level means
tstab <- tstab %>% mutate(slvl=mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>0]))
## Sea level means
tstab <- tstab %>% mutate(slvl=mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>10]))
## Sea level means
tstab <- tstab %>% mutate(slvl=mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>100]))
## Sea level means
tstab <- tstab %>% mutate(slvl=mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>Age_min]))
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-c(Oscillayer,Age))
## Sea level means
tstab <- tstab %>% mutate(slvl=mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>Age_min]))
## Sea level means
tstab <- tstab %>% mutate(slvl=mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>tstab$Age_min]))
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-c(Oscillayer,Age))
tstab$sealvl <- mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>tstab$Age_min])
tstab$sealvl <- mean(sealevel$SeaLev_longPC1)
tstab$sealvl <- mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>5])
tstab$sealvl <- mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>5])
tstab$sealvl <- mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>5|sealevel$age_calkaBP<120])
tstab$sealvl <- mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>50|sealevel$age_calkaBP<120])
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-c(Oscillayer,Age))
tstab$sealvl <- mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>50|sealevel$age_calkaBP<120])
tstab$sealvl <- mean(subset(sealevel, age_calkaBP < tstab$Age_min))
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-c(Oscillayer,Age))
tstab$sealvl <- mean(subset(sealevel, age_calkaBP < tstab$Age_min))
tstab <- tstab %>% mutate(slvl=mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>tstab$Age_min]))
View(tstab)
View(tstab)
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-c(Oscillayer,Age))
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-c(Oscillayer,Age))
## Sea level means
tstab <- tstab %>% mutate(sealvl=mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>tstab$Age_min]))
tstab$sealvl <- mean(subset(sealevel, age_calkaBP < tstab$Age_min))
## Sea level means
tstab <- tstab %>% mutate(sealevel %>% mean())
## Sea level means
tstab <- tstab %>% mutate(sealvl = sealevel %>% mean())
## Sea level means
tstab <- tstab %>% mutate(sealvl = sealevel %>% mean())
## Sea level means
tstab <- tstab %>% mutate(sealvl = mean(sealevel$SeaLev_longPC1))
## Sea level means
tstab <- tstab %>% mutate(sealvl = mean(sealevel$SeaLev_longPC1[5:10]))
## Sea level means
tstab <- tstab %>% mutate(sealvl = mean(sealevel$SeaLev_longPC1[120:130]))
## Sea level means
tstab <- tstab %>% mutate(sealvl = mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>Age_min]))
## Sea level means
tstab <- tstab %>% mutate(sealvl = mean(sealevel$SeaLev_longPC1[sealevel$age_calkaBP>tstabAge_min]))
## Sea level means
sealmean <- function(table, agemin, agemax){
table %>% filter(Agemin >= agemin, Age_max <= agemax) %>% transmute(sealvl=mean(SeaLev_longPC1))
}
sealmean(sealevel, 21,30)
sealmean(table=sealevel, agemin=21, agemax=30)
table %>% filter(Age_min >= agemin, Age_max <= agemax) %>% transmute(sealvl=mean(SeaLev_longPC1))
## Sea level means
sealmean <- function(table, agemin, agemax){
table %>% filter(Age_min >= agemin, Age_max <= agemax) %>% transmute(sealvl=mean(SeaLev_longPC1))
}
sealmean(table=sealevel, agemin=21, agemax=30)
## Sea level means
sealmean <- function(table, agemin, agemax){
table %>% filter(age_calkaBP >= agemin, age_calkaBP <= agemax)
}
sealmean(table=sealevel, agemin=21, agemax=30)
sealmean(table=sealevel, agemin=21, agemax=25)
## Sea level means
sealmean <- function(table, agemin, agemax){
table %>% filter(age_calkaBP >= agemin, age_calkaBP <= agemax)
}
sealmean(table=sealevel, agemin=21, agemax=25)
## Sea level means
sealmean <- function(table, agemin, agemax){
table %>% filter(age_calkaBP >= agemin, age_calkaBP <= agemax) %>%
pull(SeaLev_lingPC1)
}
sealmean(table=sealevel, agemin=21, agemax=25)
## Sea level means
sealmean <- function(table, agemin, agemax){
table %>% filter(age_calkaBP >= agemin, age_calkaBP <= agemax) %>%
pull(SeaLev_longPC1)
}
sealmean(table=sealevel, agemin=21, agemax=25)
## Sea level means
sealmean <- function(table, agemin, agemax){
table %>% filter(age_calkaBP >= agemin, age_calkaBP <= agemax) %>%
pull(SeaLev_longPC1) %>% mean()
}
sealmean(table=sealevel, agemin=21, agemax=25)
## Sea level means
sealmean <- function(table, agemin, agemax){
table %>% filter(age_calkaBP >= agemin, age_calkaBP <= agemax) %>%
pull(SeaLev_longPC1) %>% mean()
}
sealmean(table=sealevel, agemin=21, agemax=25)
tstab <- tstab %>% mutate(sealvl = sealmean(sealevel, Age_min, Age_max))
View(tstab)
tstab <- tstab %>% rowwise() %>%  mutate(sealvl = sealmean(sealevel, Age_min, Age_max))
View(tstab)
## Timeslices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-c(Oscillayer,Age))
tstab <- tstab %>% rowwise() %>%  mutate(sealvl = sealmean(sealevel, Age_min, Age_max))
View(tstab)
## Time slices
tstab <- read_excel("timeslices.xlsx") %>% distinct(MIS, .keep_all = T) %>% select(-c(Oscillayer,Age))
## Time slices
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
mutate(means = mean(Age_min, Age_max))
## Time slices
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
mutate(means = mean(Age_min, Age_max))
## Time slices
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
mutate(means = mean(tstab$Age_min, tstab$Age_max))
## Time slices
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age))
View(tstab)
## Time slices
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
mutate(Age_max-Age_min)
## Time slices
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
mutate(mean(Age_max,Age_min))
## Time slices
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
mutate(avg=mean(Age_max,Age_min))
## Time slices
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
mutate(avg=mean(Age_max,Age_min, trim=0))
## Time slices
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
mutate(avg=mean(c(Age_max,Age_min), trim=0))
View(tstab)
## Time slices
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
rowwise()
View(tstab)
## Time slices
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
rowwise() %>% mutate(sealvl=sealmean(sealevel, Age_min, Age_max))
View(tstab)
View(tstab)
View(sealevel)
## Sea level means
sealmean <- function(table, agemin, agemax){
table %>% filter(age_calkaBP >= agemin, age_calkaBP < agemax) %>%
pull(SeaLev_longPC1) %>% mean()
}
sealmean(table=sealevel, agemin=21, agemax=25)
sealmean(table=sealevel, agemin=420, agemax=430)
## Time slices
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
rowwise() %>%   mutate(sealvl=sealmean(sealevel, Age_min, Age_max))
library(raster)
library(dplyr)
# Variables
setwd('C:/cs/mid-pleistocene_niches/work')
rpath <-
studyarea <- shapefile('study_area.shp')
# Load and clip bathymetric DEM
gebco <- raster('C:/cs/geodata/GEBCO/unzipped_GEBCO_2020_bathymetry/gebco_global.tif') %>%
crop(studyarea)
# Load sea level curve
## Sea level data
library(readr)
sealevel <- read_delim("https://www.ncei.noaa.gov/pub/data/paleo/contributions_by_author/spratt2016/spratt2016.txt",
"\t", escape_double = FALSE, col_types = cols(X10 = col_skip()),
trim_ws = TRUE, skip = 95)
## Time slices
sealmean <- function(table, agemin, agemax){
table %>% filter(age_calkaBP >= agemin, age_calkaBP < agemax) %>%
pull(SeaLev_longPC1) %>% mean()}
View(sealevel)
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
rowwise() %>%   mutate(sealvl=sealmean(sealevel, Age_min, Age_max))
View(tstab)
# Generate relative sea level rasters
for(i in tstab){
print(i)
}
# Generate relative sea level rasters
for(i in tstab){
print(i*2)
}
# Generate relative sea level rasters
gebco
# Generate relative sea level rasters
Summary(gebco)
# Generate relative sea level rasters
cellStats(gebco)
# Generate relative sea level rasters
gebco
print(gebco)
print(gebco-tstab$sealvl[1])
View(tstab)
print(gebco-tstab$sealvl[1])
for(i in 1:nrow(tstab)){
print(tstab[i])
}
for(i in 1:nrow(tstab)){
print(tstab[,i])
}
for(i in 1:nrow(tstab)){
print(tstab[i,])
}
for(i in 1:nrow(tstab)){
print(tstab[i,sealvl])
}
for(i in 1:nrow(tstab)){
print(tstab$sealvl[i])
}
# Generate relative sea level rasters
for(i in 1:nrow(tstab)){
print(tstab$sealvl[i])
rfile <- gebco-tstab$sealvl[i]
writeRaster(rfile, filename=paste('elevation_',tstab$MIS[i],sep=''), format="GTiff", overwrite=TRUE)
}
library(raster)
library(dplyr)
# Variables
setwd('C:/cs/mid-pleistocene_niches/work/elevation')
studyarea <- shapefile('../study_area.shp')
library(raster)
library(dplyr)
# Variables
setwd('C:/cs/mid-pleistocene_niches/work/elevation')
studyarea <- shapefile('../study_area.shp')
# Load and clip bathymetric DEM
gebco <- raster('C:/cs/geodata/GEBCO/unzipped_GEBCO_2020_bathymetry/gebco_global.tif') %>%
crop(studyarea)
# Load sea level curve
## Sea level data
library(readr)
sealevel <- read_delim("https://www.ncei.noaa.gov/pub/data/paleo/contributions_by_author/spratt2016/spratt2016.txt",
"\t", escape_double = FALSE, col_types = cols(X10 = col_skip()),
trim_ws = TRUE, skip = 95)
## Time slices
sealmean <- function(table, agemin, agemax){
table %>% filter(age_calkaBP >= agemin, age_calkaBP < agemax) %>%
pull(SeaLev_longPC1) %>% mean()}
tstab <- read_excel("timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
rowwise() %>%   mutate(sealvl=sealmean(sealevel, Age_min, Age_max))
tstab <- read_excel("../timeslices.xlsx") %>%
distinct(MIS, .keep_all = T) %>%
select(-c(Oscillayer,Age)) %>%
rowwise() %>%   mutate(sealvl=sealmean(sealevel, Age_min, Age_max))
# Generate relative sea level rasters
for(i in 1:nrow(tstab)){
print(tstab$sealvl[i])
rfile <- gebco-tstab$sealvl[i]
writeRaster(rfile, filename=paste('elevation_',tstab$MIS[i],sep=''), format="GTiff", overwrite=TRUE)
}
write.csv(sealevel,"sealevel_spratt2016.csv", row.names = T)
write.csv(tstab,"sealevel_timeslices.csv", row.names = T)
# Generate relative sea level rasters
for(i in 1:nrow(tstab)){
print(tstab$sealvl[i])
rfile <- gebco-tstab$sealvl[i]
writeRaster(rfile, filename=paste('elev_',tstab$MIS[i],sep=''), format="GTiff", overwrite=TRUE)
}
